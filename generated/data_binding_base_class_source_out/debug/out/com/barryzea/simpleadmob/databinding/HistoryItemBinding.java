// Generated by view binder compiler. Do not edit!
package com.barryzea.simpleadmob.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.barryzea.simpleadmob.R;
import com.google.android.material.divider.MaterialDivider;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class HistoryItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout ctlContent;

  @NonNull
  public final MaterialDivider divider;

  @NonNull
  public final ImageView ivEquals;

  @NonNull
  public final TextView tvUnitValueFrom;

  @NonNull
  public final TextView tvUnitValueTo;

  private HistoryItemBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout ctlContent, @NonNull MaterialDivider divider,
      @NonNull ImageView ivEquals, @NonNull TextView tvUnitValueFrom,
      @NonNull TextView tvUnitValueTo) {
    this.rootView = rootView;
    this.ctlContent = ctlContent;
    this.divider = divider;
    this.ivEquals = ivEquals;
    this.tvUnitValueFrom = tvUnitValueFrom;
    this.tvUnitValueTo = tvUnitValueTo;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static HistoryItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static HistoryItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.history_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static HistoryItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ctlContent;
      ConstraintLayout ctlContent = ViewBindings.findChildViewById(rootView, id);
      if (ctlContent == null) {
        break missingId;
      }

      id = R.id.divider;
      MaterialDivider divider = ViewBindings.findChildViewById(rootView, id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.ivEquals;
      ImageView ivEquals = ViewBindings.findChildViewById(rootView, id);
      if (ivEquals == null) {
        break missingId;
      }

      id = R.id.tvUnitValueFrom;
      TextView tvUnitValueFrom = ViewBindings.findChildViewById(rootView, id);
      if (tvUnitValueFrom == null) {
        break missingId;
      }

      id = R.id.tvUnitValueTo;
      TextView tvUnitValueTo = ViewBindings.findChildViewById(rootView, id);
      if (tvUnitValueTo == null) {
        break missingId;
      }

      return new HistoryItemBinding((ConstraintLayout) rootView, ctlContent, divider, ivEquals,
          tvUnitValueFrom, tvUnitValueTo);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
